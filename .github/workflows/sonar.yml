# This is a basic workflow that is manually triggered

name: SonarQube Cloud Analysis workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  sonarqube:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        # Disabling shallow clones is recommended for improving the relevancy of reporting
        fetch-depth: 0
    - name: Setup python 3.8
      uses: actions/setup-python@v5.4.0
      with:
        python-version: 3.8
    - run: |
       pip install -U --no-cache-dir -r requirements/build.txt
       make clean
       sh 'sed -i "s/_BUILD/.dev0/g" src/bromine/_version.py'
       python3 setup.py bdist_wheel --universal
       pip install --no-cache-dir -r requirements/qa.txt
       tox -e py38 --installpkg dist/bromine-*.whl --workdir ./toxwd
       coverage combine .coverage_*
       coverage report -m --skip-covered
    - run: echo "Build and test done"
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
      with:
        projectBaseDir: .
        args:
          -Dsonar.organization=lavazza
          -Dsonar.projectKey=lavazza_ft-test
          -Dsonar.sources=src/
          -Dsonar.tests=tests/  
          -Dsonar.verbose=true
          -Dsonar.python.genericcoverage.reportPaths=coverage-reports/coverage-0.xml
          -Dsonar.python.coverage.reportPaths=coverage-reports/coverage-0.xml
          # -Dsonar.test.exclusions=tests/**
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
